#ifndef COMPARISION_H
#define COMPARISION_H

#include "../Comparisions/CompareEventsModel.h"


#include <QObject>
#include <QSharedPointer>

class Comparison: public QObject
{
    Q_OBJECT
 
    Q_PROPERTY(QObject* eventsList READ eventsList NOTIFY eventsListChanged)

public:

    Comparison();

    QObject* eventsList() const;

    qint32 affectedEvents() const;

    QSharedPointer< ProcessedData > processedData();

    qint32 groupACount() const;
    qint32 groupBCount() const;

    void registerData( const QVector< QSharedPointer< Event > >& _events );
    void setTimeWindow( qint64 _minimum, qint64 _maximum );
    void setEventVisibility( qint32 _id, bool _value );
    void selectAll();
    void deselectAll();

    void setGroup( qint32 _id, char _value );
    void clearGroup( char _value );

signals:

    void noDataChanged();
    void eventsListChanged();
    void groupACountChanged();
    void groupBCountChanged();

private:

    bool m_noData;

    QSharedPointer< EventsList > m_eventsList;
    QSharedPointer< ProcessedData > m_processedData;

    qint32 m_groupACount;
    qint32 m_groupBCount;
};

#endif // COMPARISION_H
